|sinus
SCK <= lab1:inst.SCK
QUARZ => lab1:inst.QUARZ
QUARZ => lpm_counter6:inst2.clock
FREQ[0] => lpm_counter6:inst2.data[0]
FREQ[1] => lpm_counter6:inst2.data[1]
FREQ[2] => lpm_counter6:inst2.data[2]
FREQ[3] => lpm_counter6:inst2.data[3]
FREQ[4] => lpm_counter6:inst2.data[4]
FREQ[5] => lpm_counter6:inst2.data[5]
FREQ[6] => lpm_counter6:inst2.data[6]
FREQ[7] => lpm_counter6:inst2.data[7]
MOSI <= lab1:inst.MOSI
LDAC <= lab1:inst.LDAC
CLR <= lab1:inst.CLR
CS <= lab1:inst.CS


|sinus|lab1:inst
SCK <= not.DB_MAX_OUTPUT_PORT_TYPE
QUARZ => lpm_counter0:inst.clock
QUARZ => lpm_counter2:inst13.clock
QUARZ => lpm_counter4:inst7.clock
CS <= not_1.DB_MAX_OUTPUT_PORT_TYPE
MOSI <= inst_d.DB_MAX_OUTPUT_PORT_TYPE
CODE[0] => lpm_mux0:inst8.data13
CODE[1] => lpm_mux0:inst8.data12
CODE[2] => lpm_mux0:inst8.data11
CODE[3] => lpm_mux0:inst8.data10
CODE[4] => lpm_mux0:inst8.data9
CODE[5] => lpm_mux0:inst8.data8
CODE[6] => lpm_mux0:inst8.data7
CODE[7] => lpm_mux0:inst8.data6
CODE[8] => lpm_mux0:inst8.data5
CODE[9] => lpm_mux0:inst8.data4
CLR <= TRUE.DB_MAX_OUTPUT_PORT_TYPE
LDAC <= inst12.DB_MAX_OUTPUT_PORT_TYPE


|sinus|lab1:inst|lpm_constant0:instt
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]


|sinus|lab1:inst|lpm_constant0:instt|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>


|sinus|lab1:inst|lpm_counter0:inst
clk_en => lpm_counter:LPM_COUNTER_component.clk_en
clock => lpm_counter:LPM_COUNTER_component.clock
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]


|sinus|lab1:inst|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component
clock => cntr_32k:auto_generated.clock
clk_en => cntr_32k:auto_generated.clk_en
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_32k:auto_generated.q[0]
q[1] <= cntr_32k:auto_generated.q[1]
q[2] <= cntr_32k:auto_generated.q[2]
q[3] <= cntr_32k:auto_generated.q[3]
q[4] <= cntr_32k:auto_generated.q[4]
q[5] <= cntr_32k:auto_generated.q[5]
q[6] <= cntr_32k:auto_generated.q[6]
q[7] <= cntr_32k:auto_generated.q[7]
cout <= cntr_32k:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|sinus|lab1:inst|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_32k:auto_generated
clk_en => counter_reg_bit1a[7].IN0
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT


|sinus|lab1:inst|lpm_counter0:inst|lpm_counter:LPM_COUNTER_component|cntr_32k:auto_generated|cmpr_ccc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
dataa[4] => data_wire[2].IN0
dataa[5] => data_wire[2].IN0
dataa[6] => data_wire[3].IN0
dataa[7] => data_wire[3].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1
datab[4] => data_wire[2].IN1
datab[5] => data_wire[2].IN1
datab[6] => data_wire[3].IN1
datab[7] => data_wire[3].IN1


|sinus|lab1:inst|lpm_counter2:inst13
clock => lpm_counter:LPM_COUNTER_component.clock
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]
q[8] <= lpm_counter:LPM_COUNTER_component.q[8]
q[9] <= lpm_counter:LPM_COUNTER_component.q[9]
q[10] <= lpm_counter:LPM_COUNTER_component.q[10]
q[11] <= lpm_counter:LPM_COUNTER_component.q[11]


|sinus|lab1:inst|lpm_counter2:inst13|lpm_counter:LPM_COUNTER_component
clock => cntr_qgj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_qgj:auto_generated.q[0]
q[1] <= cntr_qgj:auto_generated.q[1]
q[2] <= cntr_qgj:auto_generated.q[2]
q[3] <= cntr_qgj:auto_generated.q[3]
q[4] <= cntr_qgj:auto_generated.q[4]
q[5] <= cntr_qgj:auto_generated.q[5]
q[6] <= cntr_qgj:auto_generated.q[6]
q[7] <= cntr_qgj:auto_generated.q[7]
q[8] <= cntr_qgj:auto_generated.q[8]
q[9] <= cntr_qgj:auto_generated.q[9]
q[10] <= cntr_qgj:auto_generated.q[10]
q[11] <= cntr_qgj:auto_generated.q[11]
cout <= cntr_qgj:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|sinus|lab1:inst|lpm_counter2:inst13|lpm_counter:LPM_COUNTER_component|cntr_qgj:auto_generated
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT


|sinus|lab1:inst|lpm_counter2:inst13|lpm_counter:LPM_COUNTER_component|cntr_qgj:auto_generated|cmpr_ndc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[2].IN0
dataa[1] => data_wire[2].IN0
dataa[2] => data_wire[3].IN0
dataa[3] => data_wire[3].IN0
dataa[4] => data_wire[4].IN0
dataa[5] => data_wire[4].IN0
dataa[6] => data_wire[5].IN0
dataa[7] => data_wire[5].IN0
dataa[8] => data_wire[6].IN0
dataa[9] => data_wire[6].IN0
dataa[10] => data_wire[7].IN0
dataa[11] => data_wire[7].IN0
datab[0] => data_wire[2].IN1
datab[1] => data_wire[2].IN1
datab[2] => data_wire[3].IN1
datab[3] => data_wire[3].IN1
datab[4] => data_wire[4].IN1
datab[5] => data_wire[4].IN1
datab[6] => data_wire[5].IN1
datab[7] => data_wire[5].IN1
datab[8] => data_wire[6].IN1
datab[9] => data_wire[6].IN1
datab[10] => data_wire[7].IN1
datab[11] => data_wire[7].IN1


|sinus|lab1:inst|lpm_mux0:inst8
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data10 => LPM_MUX:LPM_MUX_component.DATA[10][0]
data11 => LPM_MUX:LPM_MUX_component.DATA[11][0]
data12 => LPM_MUX:LPM_MUX_component.DATA[12][0]
data13 => LPM_MUX:LPM_MUX_component.DATA[13][0]
data14 => LPM_MUX:LPM_MUX_component.DATA[14][0]
data15 => LPM_MUX:LPM_MUX_component.DATA[15][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
data3 => LPM_MUX:LPM_MUX_component.DATA[3][0]
data4 => LPM_MUX:LPM_MUX_component.DATA[4][0]
data5 => LPM_MUX:LPM_MUX_component.DATA[5][0]
data6 => LPM_MUX:LPM_MUX_component.DATA[6][0]
data7 => LPM_MUX:LPM_MUX_component.DATA[7][0]
data8 => LPM_MUX:LPM_MUX_component.DATA[8][0]
data9 => LPM_MUX:LPM_MUX_component.DATA[9][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
sel[2] => LPM_MUX:LPM_MUX_component.SEL[2]
sel[3] => LPM_MUX:LPM_MUX_component.SEL[3]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|sinus|lab1:inst|lpm_mux0:inst8|LPM_MUX:LPM_MUX_component
data[0][0] => mux_o4e:auto_generated.data[0]
data[1][0] => mux_o4e:auto_generated.data[1]
data[2][0] => mux_o4e:auto_generated.data[2]
data[3][0] => mux_o4e:auto_generated.data[3]
data[4][0] => mux_o4e:auto_generated.data[4]
data[5][0] => mux_o4e:auto_generated.data[5]
data[6][0] => mux_o4e:auto_generated.data[6]
data[7][0] => mux_o4e:auto_generated.data[7]
data[8][0] => mux_o4e:auto_generated.data[8]
data[9][0] => mux_o4e:auto_generated.data[9]
data[10][0] => mux_o4e:auto_generated.data[10]
data[11][0] => mux_o4e:auto_generated.data[11]
data[12][0] => mux_o4e:auto_generated.data[12]
data[13][0] => mux_o4e:auto_generated.data[13]
data[14][0] => mux_o4e:auto_generated.data[14]
data[15][0] => mux_o4e:auto_generated.data[15]
sel[0] => mux_o4e:auto_generated.sel[0]
sel[1] => mux_o4e:auto_generated.sel[1]
sel[2] => mux_o4e:auto_generated.sel[2]
sel[3] => mux_o4e:auto_generated.sel[3]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_o4e:auto_generated.result[0]


|sinus|lab1:inst|lpm_mux0:inst8|LPM_MUX:LPM_MUX_component|mux_o4e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[1] => _.IN0
data[2] => _.IN1
data[2] => _.IN1
data[2] => _.IN1
data[2] => _.IN1
data[3] => _.IN0
data[3] => _.IN0
data[4] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[6] => _.IN1
data[6] => _.IN1
data[7] => _.IN0
data[8] => _.IN0
data[8] => _.IN0
data[8] => _.IN0
data[8] => _.IN0
data[9] => _.IN0
data[9] => _.IN0
data[10] => _.IN1
data[10] => _.IN1
data[10] => _.IN1
data[10] => _.IN1
data[11] => _.IN0
data[11] => _.IN0
data[12] => _.IN0
data[12] => _.IN0
data[13] => _.IN0
data[14] => _.IN1
data[14] => _.IN1
data[15] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[2] => _.IN1
sel[2] => _.IN0
sel[2] => _.IN0
sel[2] => _.IN0
sel[2] => _.IN0
sel[2] => _.IN0
sel[3] => _.IN0
sel[3] => _.IN0
sel[3] => _.IN0
sel[3] => _.IN0


|sinus|lab1:inst|lpm_constant1:inst1f
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]


|sinus|lab1:inst|lpm_constant1:inst1f|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>


|sinus|lab1:inst|lpm_counter1:inst9
clock => lpm_counter:LPM_COUNTER_component.clock
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]


|sinus|lab1:inst|lpm_counter1:inst9|lpm_counter:LPM_COUNTER_component
clock => cntr_okh:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_okh:auto_generated.q[0]
q[1] <= cntr_okh:auto_generated.q[1]
q[2] <= cntr_okh:auto_generated.q[2]
q[3] <= cntr_okh:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|sinus|lab1:inst|lpm_counter1:inst9|lpm_counter:LPM_COUNTER_component|cntr_okh:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT


|sinus|lab1:inst|lpm_counter3:inst1
aclr => lpm_counter:LPM_COUNTER_component.aclr
clock => lpm_counter:LPM_COUNTER_component.clock
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]


|sinus|lab1:inst|lpm_counter3:inst1|lpm_counter:LPM_COUNTER_component
clock => cntr_nrj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_nrj:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_nrj:auto_generated.q[0]
q[1] <= cntr_nrj:auto_generated.q[1]
q[2] <= cntr_nrj:auto_generated.q[2]
cout <= cntr_nrj:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|sinus|lab1:inst|lpm_counter3:inst1|lpm_counter:LPM_COUNTER_component|cntr_nrj:auto_generated
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT


|sinus|lab1:inst|lpm_counter3:inst1|lpm_counter:LPM_COUNTER_component|cntr_nrj:auto_generated|cmpr_7cc:cmpr3
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1


|sinus|lab1:inst|lpm_counter4:inst7
clock => lpm_counter:LPM_COUNTER_component.clock
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]


|sinus|lab1:inst|lpm_counter4:inst7|lpm_counter:LPM_COUNTER_component
clock => cntr_i3i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_i3i:auto_generated.q[0]
q[1] <= cntr_i3i:auto_generated.q[1]
q[2] <= cntr_i3i:auto_generated.q[2]
cout <= cntr_i3i:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|sinus|lab1:inst|lpm_counter4:inst7|lpm_counter:LPM_COUNTER_component|cntr_i3i:auto_generated
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT


|sinus|my_lpm_rom:inst4
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
address[8] => altsyncram:altsyncram_component.address_a[8]
address[9] => altsyncram:altsyncram_component.address_a[9]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]
q[8] <= altsyncram:altsyncram_component.q_a[8]
q[9] <= altsyncram:altsyncram_component.q_a[9]


|sinus|my_lpm_rom:inst4|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_a[8] => ~NO_FANOUT~
data_a[9] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_f971:auto_generated.address_a[0]
address_a[1] => altsyncram_f971:auto_generated.address_a[1]
address_a[2] => altsyncram_f971:auto_generated.address_a[2]
address_a[3] => altsyncram_f971:auto_generated.address_a[3]
address_a[4] => altsyncram_f971:auto_generated.address_a[4]
address_a[5] => altsyncram_f971:auto_generated.address_a[5]
address_a[6] => altsyncram_f971:auto_generated.address_a[6]
address_a[7] => altsyncram_f971:auto_generated.address_a[7]
address_a[8] => altsyncram_f971:auto_generated.address_a[8]
address_a[9] => altsyncram_f971:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_f971:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_f971:auto_generated.q_a[0]
q_a[1] <= altsyncram_f971:auto_generated.q_a[1]
q_a[2] <= altsyncram_f971:auto_generated.q_a[2]
q_a[3] <= altsyncram_f971:auto_generated.q_a[3]
q_a[4] <= altsyncram_f971:auto_generated.q_a[4]
q_a[5] <= altsyncram_f971:auto_generated.q_a[5]
q_a[6] <= altsyncram_f971:auto_generated.q_a[6]
q_a[7] <= altsyncram_f971:auto_generated.q_a[7]
q_a[8] <= altsyncram_f971:auto_generated.q_a[8]
q_a[9] <= altsyncram_f971:auto_generated.q_a[9]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|sinus|my_lpm_rom:inst4|altsyncram:altsyncram_component|altsyncram_f971:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[8] => ram_block1a9.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[9] => ram_block1a9.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT


|sinus|lpm_constant0:inst10
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]


|sinus|lpm_constant0:inst10|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>


|sinus|lpm_counter6:inst2
clock => lpm_counter:LPM_COUNTER_component.clock
data[0] => lpm_counter:LPM_COUNTER_component.data[0]
data[1] => lpm_counter:LPM_COUNTER_component.data[1]
data[2] => lpm_counter:LPM_COUNTER_component.data[2]
data[3] => lpm_counter:LPM_COUNTER_component.data[3]
data[4] => lpm_counter:LPM_COUNTER_component.data[4]
data[5] => lpm_counter:LPM_COUNTER_component.data[5]
data[6] => lpm_counter:LPM_COUNTER_component.data[6]
data[7] => lpm_counter:LPM_COUNTER_component.data[7]
sload => lpm_counter:LPM_COUNTER_component.sload
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]


|sinus|lpm_counter6:inst2|lpm_counter:LPM_COUNTER_component
clock => cntr_43j:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_43j:auto_generated.sload
data[0] => cntr_43j:auto_generated.data[0]
data[1] => cntr_43j:auto_generated.data[1]
data[2] => cntr_43j:auto_generated.data[2]
data[3] => cntr_43j:auto_generated.data[3]
data[4] => cntr_43j:auto_generated.data[4]
data[5] => cntr_43j:auto_generated.data[5]
data[6] => cntr_43j:auto_generated.data[6]
data[7] => cntr_43j:auto_generated.data[7]
cin => ~NO_FANOUT~
q[0] <= cntr_43j:auto_generated.q[0]
q[1] <= cntr_43j:auto_generated.q[1]
q[2] <= cntr_43j:auto_generated.q[2]
q[3] <= cntr_43j:auto_generated.q[3]
q[4] <= cntr_43j:auto_generated.q[4]
q[5] <= cntr_43j:auto_generated.q[5]
q[6] <= cntr_43j:auto_generated.q[6]
q[7] <= cntr_43j:auto_generated.q[7]
cout <= cntr_43j:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|sinus|lpm_counter6:inst2|lpm_counter:LPM_COUNTER_component|cntr_43j:auto_generated
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[7].IN1


|sinus|lpm_counter5:inst6
clock => lpm_counter:LPM_COUNTER_component.clock
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]
q[8] <= lpm_counter:LPM_COUNTER_component.q[8]
q[9] <= lpm_counter:LPM_COUNTER_component.q[9]


|sinus|lpm_counter5:inst6|lpm_counter:LPM_COUNTER_component
clock => cntr_5mh:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_5mh:auto_generated.q[0]
q[1] <= cntr_5mh:auto_generated.q[1]
q[2] <= cntr_5mh:auto_generated.q[2]
q[3] <= cntr_5mh:auto_generated.q[3]
q[4] <= cntr_5mh:auto_generated.q[4]
q[5] <= cntr_5mh:auto_generated.q[5]
q[6] <= cntr_5mh:auto_generated.q[6]
q[7] <= cntr_5mh:auto_generated.q[7]
q[8] <= cntr_5mh:auto_generated.q[8]
q[9] <= cntr_5mh:auto_generated.q[9]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|sinus|lpm_counter5:inst6|lpm_counter:LPM_COUNTER_component|cntr_5mh:auto_generated
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT


