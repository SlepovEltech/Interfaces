/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("QUARZ")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("FREQ")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("FREQ[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FREQ";
}

SIGNAL("FREQ[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FREQ";
}

SIGNAL("FREQ[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FREQ";
}

SIGNAL("FREQ[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FREQ";
}

SIGNAL("FREQ[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FREQ";
}

SIGNAL("FREQ[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FREQ";
}

SIGNAL("FREQ[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FREQ";
}

SIGNAL("FREQ[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "FREQ";
}

SIGNAL("SCK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MOSI")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LDAC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CLR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("QUARZ")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100000;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("FREQ[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 96000.0;
	}
}

TRANSITION_LIST("FREQ[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 96000.0;
	}
}

TRANSITION_LIST("FREQ[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 4400.0;
		LEVEL 0 FOR 91600.0;
	}
}

TRANSITION_LIST("FREQ[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 4400.0;
		LEVEL 0 FOR 91600.0;
	}
}

TRANSITION_LIST("FREQ[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 4400.0;
		LEVEL 0 FOR 91600.0;
	}
}

TRANSITION_LIST("FREQ[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 91600.0;
	}
}

TRANSITION_LIST("FREQ[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 6000.0;
		LEVEL 0 FOR 91600.0;
	}
}

TRANSITION_LIST("FREQ[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 96000.0;
	}
}

TRANSITION_LIST("SCK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 63.5;
		NODE
		{
			REPEAT = 780;
			NODE
			{
				REPEAT = 15;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 66.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 34.5;
	}
}

TRANSITION_LIST("MOSI")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 463.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 124.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 92.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 92.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 88.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 92.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 92.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 96.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 92.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 108.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 8.0;
				LEVEL 1 FOR 8.0;
			}
			LEVEL 0 FOR 92.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 92.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
		}
		LEVEL 0 FOR 92.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 88.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 104.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 108.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 8.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 8.0;
			}
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 8.0;
			}
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 108.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 12.0;
			}
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 12.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 8.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 104.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 8.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 8.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 104.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 108.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 104.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 12.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 108.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 104.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 8.0;
			}
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 12.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 12.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 112.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 8.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 8.0;
			}
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 108.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 100.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 96.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 92.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 104.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 88.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 24.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 92.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 40.5;
	}
}

TRANSITION_LIST("LDAC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 134.5;
		NODE
		{
			REPEAT = 780;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 17.5;
	}
}

TRANSITION_LIST("CLR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("CS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 62.5;
		NODE
		{
			REPEAT = 780;
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 64.0;
		}
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 33.5;
	}
}

DISPLAY_LINE
{
	CHANNEL = "QUARZ";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "FREQ[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "SCK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MOSI";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LDAC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
